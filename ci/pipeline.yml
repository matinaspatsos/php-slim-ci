resources:
  - name: git-dev-commit
    type: git
    source:
      # TODO use private repo
      uri: https://github.com/matinaspatsos/php-slim-ci.git
      branch: dev
  - name: ecr-app-php-image
    type: docker-image
    source:
      aws_access_key_id: ((aws-token))
      aws_secret_access_key: ((aws-secret))
      repository: ((php-slim-ecr-repo))
  - name: ecr-ci-task-image
    type: docker-image
    source:
      aws_access_key_id: ((aws-token))
      aws_secret_access_key: ((aws-secret))
      repository: ((php-slim-ci-ecr-repo))

jobs:
  # See https://ddymko.medium.com/deploy-docker-images-with-concourse-396f7ad23fe2
  - name: build-ci-task-image
    serial: true
    plan:
      - get: git-dev-commit
      - put: ecr-ci-task-image
        params:
          build: git-dev-commit/ci
  # See https://concourse-ci.org/nodejs-example.html
  - name: unit-test
    # On serial groups: https://concourse-ci.org/jobs.html
    serial_groups:
      - unit-test
    plan:
      - get: git-dev-commit
        trigger: true
      - get: ecr-ci-task-image
        trigger: true
      - task: install
        image: ecr-ci-task-image
        config:
          platform: linux
          inputs:
            - name: git-dev-commit
          outputs:
            - name: dependencies
              path: git-dev-commit/vendor
          run:
            path: composer
            args: ["install", "--no-interaction"]
            dir: git-dev-commit
      - task: test
        image: ecr-ci-task-image
        config:
          platform: linux
          inputs:
            - name: git-dev-commit
            - name: dependencies
              path: git-dev-commit/vendor
          run:
            path: composer
            args: ["test"]
            dir: git-dev-commit
  - name: sast-scan
    # On serial groups: https://concourse-ci.org/jobs.html
    serial_groups:
      - sast-scan
    plan:
      - get: git-dev-commit
        trigger: true
      - task: scan
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: bearer/bearer
          inputs:
            - name: git-dev-commit
              path: /tmp/scan
          run:
            path: bearer
            args: ["scan", "/tmp/scan", "--debug"]
  # TODO Nginx build
  # TODO versioning
  - name: build
    serial_groups:
      - unit-test
      - sast-scan
    # See # See https://ddymko.medium.com/deploy-docker-images-with-concourse-396f7ad23fe2
    plan:
      - get: git-dev-commit
        trigger: true
        passed:
          - unit-test
          - sast-scan
      - put: ecr-app-php-image
        # See https://github.com/concourse/docker-image-resource
        params:
          build: git-dev-commit
          dockerfile: git-dev-commit/docker/php/Dockerfile
          # TODO tag with versioning
